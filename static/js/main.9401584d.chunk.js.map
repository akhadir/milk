{"version":3,"sources":["Subscriptions/SubscriptionForm.js","Subscriptions/Subscription.js","Orders/OrderDetail.js","Orders/Order.js","Login/Login.js","App.js","FetchSubscription.js","index.js"],"names":["props","startDate","endDate","products","today","Date","subData","subscriptionData","pausedFrom","PausedFrom","pausedTo","PausedTo","setDate","getDate","setHours","setMinutes","setSeconds","useState","formData","config","setConfig","changeDetails","checked","val","Details","index","indexOf","push","splice","data","saveSubscription","useCallback","getDaysChecked","day","details","Array","isArray","startDateChange","e","endDateChange","savePauseSubscription","preventDefault","Id","getFormattedDateTime","date","getFullYear","getMonth","getHours","getMinutes","getSeconds","getTimezoneOffset","length","ProductId","className","onClick","OverlayTrigger","placement","trigger","overlay","Popover","id","Title","as","Content","Form","onSubmit","Group","controlId","Label","minDate","clearIcon","value","onChange","type","pauseSubscription","window","confirm","deleteSubscription","defaultValue","target","map","product","key","Name","Type","Check","label","name","Control","Quantity","min","max","Subscription","then","content","Spinner","animation","getSubscriptions","sdata","modal","handleClose","showAddScreen","Modal","show","onHide","Header","closeButton","Body","SubscriptionForm","Footer","Button","variant","useEffect","Accordion","defaultActiveKey","item","Card","Toggle","eventKey","forEach","element","getProductName","Collapse","OrderDetail","getProductItemTotal","qty","i","total","len","Amount","Table","size","striped","bordered","hover","Total","colSpan","subscriptions","getProductTotal","Order","weekDays","refresh","setContent","getOrders","parseInt","reduce","num","setOrder","mdata","filter","out","weekDay","getDay","tomorrow","undefined","Login","Phone","FlatNo","Address","setFormData","register","App","orderCallback","topContent","subscriptionContent","orderContent","orderStartDate","userData","productsData","refreshOrder","callback","formattedDate","prom","showWelcomePage","udata","getUserProductDetails","FetchSub","queryBaseURL","getUserDetails","promise","Promise","resolve","reject","localStorage","getItem","jData","JSON","parse","url","AxiosWrapper","get","resp","setItem","stringify","getProductDetails","catch","all","delete","res","post","split","toString","put","throwError","msg","errorCallback","error","handleError","init","addSessionHeader","headers","newConfig","axios","call","querystring","response","console","log","status","errorMessage","localizedErrorSummary","errorSummary","request","message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9401584d.chunk.js","sourcesContent":["import React, {useState, useCallback} from 'react';\r\nimport { MdPauseCircleFilled, MdDelete, MdSave } from 'react-icons/md';\r\nimport { Form, Popover, OverlayTrigger} from 'react-bootstrap';\r\nimport DatePicker from 'react-date-picker';\r\nexport default function (props) {\r\n    let products = props.products;\r\n    let today = new Date();\r\n    let subData = props.subscriptionData;\r\n    let pausedFrom = subData.PausedFrom;\r\n    let pausedTo = subData.PausedTo;\r\n    today.setDate(today.getDate() + 1);\r\n    let startDate;\r\n    if (pausedFrom && pausedFrom != '0000-00-00 00:00:00') {\r\n        startDate = new Date(pausedFrom);\r\n    } else {\r\n        startDate = new Date(today);\r\n        startDate.setHours(0);\r\n        startDate.setMinutes(0);\r\n        startDate.setSeconds(0);\r\n    }\r\n    \r\n    let endDate;\r\n    if (pausedTo && pausedTo != '0000-00-00 00:00:00') {\r\n        endDate = new Date(pausedTo);\r\n    } else {\r\n        endDate = new Date(today);\r\n        endDate.setHours(23);\r\n        endDate.setMinutes(59);\r\n        endDate.setSeconds(59);\r\n    }\r\n    \r\n    const [config, setConfig] = useState({\r\n        formData: props.subscriptionData,\r\n        startDate: startDate,\r\n        endDate: endDate\r\n    });\r\n    const frequencyChange = (e) => {\r\n        let data = props.subscriptionData;\r\n        data['Details'] = [];\r\n        data['Type'] = e.target.value;\r\n        setConfig({...config, formData: {...data}});\r\n    }\r\n    const productChange = (e) => {\r\n        let data = props.subscriptionData;\r\n        data['ProductId'] = e.target.value;\r\n        setConfig({...config, formData: {...data}});\r\n    }\r\n    const changeQuantity = (e) => {\r\n        let data = props.subscriptionData;\r\n        data['Quantity'] = e.target.value;\r\n        setConfig({...config, formData: {...data}});\r\n    }\r\n    const changeDetails = (checked, val) => {\r\n        let Details = config.formData.Details;\r\n        let index = Details.indexOf(val);\r\n        if (checked && index === -1) {\r\n            Details.push(val);\r\n        } else if (!checked && index > -1) {\r\n            Details.splice(index, 1);\r\n        }\r\n        let data = props.subscriptionData;\r\n        data['Details'] = Details;\r\n        setConfig({...config, formData: {...data}});\r\n    }\r\n    const saveSubscription = useCallback(() => {\r\n        props.saveSubscription(config.formData);\r\n    }, []);\r\n    function getDaysChecked(day) {\r\n        let details = config.formData.Details;\r\n        if (Array.isArray(details) && details.indexOf(day) > -1) {\r\n            return \"checked\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n    const startDateChange = (e) => {\r\n        e.setHours(0);\r\n        e.setMinutes(0);\r\n        e.setSeconds(0);\r\n        config.startDate = e;\r\n        if (config.endDate < e) {\r\n            let endDate = new Date(e);\r\n            endDate.setHours(23);\r\n            endDate.setMinutes(59);\r\n            endDate.setSeconds(59);\r\n            config.endDate = endDate;\r\n        }\r\n        setConfig({...config});\r\n    }\r\n    const endDateChange = (e) => {\r\n        e.setHours(23);\r\n        e.setMinutes(59);\r\n        e.setSeconds(59);\r\n        config.endDate = e;\r\n        setConfig({...config});\r\n    }\r\n    const savePauseSubscription = (e) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            Id: config.formData.Id,\r\n            PausedFrom: getFormattedDateTime(config.startDate),\r\n            PausedTo: getFormattedDateTime(config.endDate)\r\n        }\r\n        props.saveSubscription(data);\r\n    }\r\n    function getFormattedDateTime(date) {\r\n        let justDate = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\r\n        let time = date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\r\n        let timezone = date.getTimezoneOffset();\r\n        return justDate + ' ' + time + ' ' + timezone;\r\n    }\r\n    const pauseSubscription = () => {\r\n        let startDate = config.startDate;\r\n        let endDate = config.endDate;\r\n        return (<Popover id=\"popover-pause-sub\" className=\"popover-pause-sub\">\r\n            <Popover.Title as=\"h3\">Pause Subscription</Popover.Title>\r\n            <Popover.Content>\r\n                <Form onSubmit={savePauseSubscription}>\r\n                    <Form.Group controlId=\"PausedFrom\">\r\n                        <Form.Label>From:</Form.Label>\r\n                        <div>\r\n                            <DatePicker minDate={today} id=\"start-order-datepicker\" clearIcon={null} value={startDate} onChange={startDateChange} />\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"PausedTo\">\r\n                        <Form.Label>To:</Form.Label>\r\n                        <div>\r\n                            <DatePicker minDate={startDate} id=\"end-order-datepicker\" clearIcon={null} value={endDate} onChange={endDateChange} />\r\n                        </div>\r\n                    </Form.Group>\r\n                    <input type=\"submit\" value=\"Save\" />\r\n                </Form>\r\n            </Popover.Content>\r\n        </Popover>);\r\n    }\r\n    const deleteSubscription = () => {\r\n        if (window.confirm(\"Do you want to delete?\")) {\r\n            props.deleteSubscription(config.formData.Id);\r\n        }\r\n    }\r\n    let formData = config.formData;\r\n    if (products.length === 1 && !formData.ProductId) {\r\n        props.subscriptionData['ProductId'] = formData.ProductId = products[0]['Id'];\r\n    }\r\n    return (\r\n    <div className=\"sub-form\">\r\n        {formData.Id && <div className=\"sub-ctrl\">\r\n            <MdSave onClick={saveSubscription} />\r\n            <OverlayTrigger placement=\"bottom\" trigger=\"click\" overlay={pauseSubscription()}>\r\n                <MdPauseCircleFilled />\r\n            </OverlayTrigger>\r\n            <MdDelete onClick={deleteSubscription} />\r\n        </div>}\r\n        <Form>\r\n            <Form.Group controlId=\"frequency\">\r\n                <Form.Label>Product:</Form.Label>\r\n                <select id=\"product-details\" defaultValue={formData.ProductId} onChange={productChange}>\r\n                    {products.map((product) => {\r\n                        return (<option value={product.Id} key={product.Id}>{product.Name}</option>);\r\n                    })}\r\n                </select>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"type\">\r\n                <Form.Label>Frequency:</Form.Label>\r\n                <select id=\"type-details\" defaultValue={formData.Type} onChange={frequencyChange}>\r\n                    <option value={'D'}>Daily</option>\r\n                    <option value={'W'}>Weekly</option>\r\n                    <option value={'M'}>Monthly</option>\r\n                </select>\r\n            </Form.Group>\r\n            {formData.Type === 'W' && (<Form.Group controlId=\"weekdays\">\r\n                <Form.Label>Weekdays:</Form.Label>\r\n                <Form.Check type=\"checkbox\" label=\"Sun\" checked={getDaysChecked(\"Sun\")} onChange={(e) => changeDetails(e.target.checked, \"Sun\")} />\r\n                <Form.Check type=\"checkbox\" label=\"Mon\" checked={getDaysChecked(\"Mon\")} onChange={(e) => changeDetails(e.target.checked, \"Mon\")} />\r\n                <Form.Check type=\"checkbox\" label=\"Tue\" checked={getDaysChecked(\"Tue\")} onChange={(e) => changeDetails(e.target.checked, \"Tue\")} />\r\n                <Form.Check type=\"checkbox\" label=\"Wed\" checked={getDaysChecked(\"Wed\")} onChange={(e) => changeDetails(e.target.checked, \"Wed\")} />\r\n                <Form.Check type=\"checkbox\" label=\"Thu\" checked={getDaysChecked(\"Thu\")} onChange={(e) => changeDetails(e.target.checked, \"Thu\")} />\r\n                <Form.Check type=\"checkbox\" label=\"Fri\" checked={getDaysChecked(\"Fri\")} onChange={(e) => changeDetails(e.target.checked, \"Fri\")} />\r\n                <Form.Check type=\"checkbox\" label=\"Sat\" checked={getDaysChecked(\"Sat\")} onChange={(e) => changeDetails(e.target.checked, \"Sat\")} />\r\n            </Form.Group>)}\r\n            {formData.Type === 'M' && (<Form.Group controlId=\"monthdays\">\r\n                <Form.Label>Monthdays:</Form.Label>\r\n                <Form.Check type=\"checkbox\" label=\"First Day\" name=\"monthdays\" checked={getDaysChecked(\"FD\")} onChange={(e) => changeDetails(e.target.checked, \"FD\")} />\r\n                <Form.Check type=\"checkbox\" label=\"Last Day\" name=\"monthdays\" checked={getDaysChecked(\"LD\")} onChange={(e) => changeDetails(e.target.checked, \"LD\")} />\r\n            </Form.Group>)}\r\n            <Form.Group controlId=\"Quantity\">\r\n                <Form.Label>Quantity:</Form.Label>\r\n                <Form.Control type=\"number\" onChange={changeQuantity} defaultValue={formData.Quantity} min={1} max={100}/>\r\n            </Form.Group>\r\n        </Form>\r\n    </div>\r\n    );\r\n}","import React, {useState, useEffect, useCallback} from 'react';\r\nimport { MdAddCircle } from 'react-icons/md';\r\nimport { Button, Card, Accordion, Modal, Spinner } from 'react-bootstrap';\r\nimport './Subscription.css';\r\nimport SubscriptionForm from \"./SubscriptionForm\";\r\nfunction Subscription(props) {\r\n    let subscriptionData = {\r\n        ProductId: '',\r\n        Type: 'D',\r\n        Details: [],\r\n        Quantity: 1\r\n    }\r\n    const deleteSubscription = useCallback((id) => {\r\n        return props.deleteSubscription(id).then(() => {\r\n            setConfig({...config,\r\n                content: (<Spinner animation=\"border\" />)\r\n            });\r\n            getSubscriptions();\r\n        });\r\n    }, [])\r\n    const saveSubscription = (sdata = null) => {\r\n        if (!sdata || sdata.target) {\r\n            sdata = subscriptionData;\r\n            setConfig({\r\n                content: (<Spinner animation=\"border\" />),\r\n                modal: ''\r\n            });\r\n        }\r\n        props.saveSubscription(sdata);\r\n    }\r\n    const [config, setConfig] = useState({\r\n        content: (<Spinner animation=\"border\" />),\r\n        modal: ''\r\n    });\r\n    const handleClose = () => {\r\n        setConfig({...config, modal: ''});\r\n    }\r\n    const showAddScreen = () => {\r\n        setConfig({...config, modal: (<Modal className=\"subs-dialog\" show={true} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Add Subscription</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <SubscriptionForm products={props.products} deleteSubscription={deleteSubscription} subscriptionData={subscriptionData} />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n            <Button variant=\"primary\" onClick={saveSubscription}>Save</Button>\r\n            </Modal.Footer>\r\n        </Modal>)});\r\n    }\r\n    useEffect(() => {\r\n        getSubscriptions();\r\n    }, [config.modal])\r\n    return (\r\n        <div className=\"subscription\">\r\n            <div className=\"wrapper\">\r\n                <h6>Subscription</h6>\r\n                <span className=\"header-icon\" onClick={showAddScreen}><MdAddCircle /></span>\r\n                {config.content}\r\n            </div>\r\n            {config.modal}\r\n        </div>\r\n    );\r\n    function getProductName (id, products) {\r\n        var name = '';\r\n        products.forEach(element => {\r\n            if (element['Id'] === id) {\r\n                name = element['Name'];\r\n                return true;\r\n            }\r\n        });\r\n        return name;\r\n    }\r\n    function getSubscriptions() {\r\n        props.getSubscriptions().then((data) => {\r\n            if (data.length) {\r\n                setConfig({\r\n                ...config, content: (<Accordion defaultActiveKey={0}>\r\n                    {data.map((item, index) => {\r\n                        return (<Card key={index}>\r\n                            <Accordion.Toggle as={Card.Header} eventKey={index}>{index + 1}. {getProductName(item.ProductId, props.products)}</Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey={index}>\r\n                                <Card.Body>\r\n                                    <SubscriptionForm saveSubscription={saveSubscription} products={props.products} deleteSubscription={deleteSubscription} subscriptionData={item} />\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>);\r\n                    })}\r\n                </Accordion>)\r\n                });\r\n            }\r\n            else {\r\n                config['content'] = (<div className=\"add-subs\">\r\n                    <Button className=\"add-sub-icon\" onClick={showAddScreen}><MdAddCircle /> Add Subscription</Button>\r\n                </div>);\r\n                setConfig({ ...config });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default Subscription;\r\n","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nexport const OrderDetail = (props) => {\r\n  let data = props.data;\r\n  const getProductName = (id) => {\r\n    let name = '';\r\n    let products = props.products;\r\n    let len = products.length;\r\n    let i;\r\n    for (i = 0; i < len; i++) {\r\n      let item = products[i];\r\n      if (item.Id === id) {\r\n        name = item.Name;\r\n        break;\r\n      }\r\n    }\r\n    return name;\r\n  };\r\n  const getProductItemTotal = (id, qty) => {\r\n    let total = 0;\r\n    let products = props.products;\r\n    let len = products.length;\r\n    let i;\r\n    for (i = 0; i < len; i++) {\r\n      let item = products[i];\r\n      if (item.Id === id) {\r\n        total = item.Amount * qty;\r\n        break;\r\n      }\r\n    }\r\n    return total;\r\n  };\r\n  const getProductTotal = (subscriptions) => {\r\n    let total = 0;\r\n    let len = subscriptions.length;\r\n    let i;\r\n    for (i = 0; i < len; i++) {\r\n      let item = subscriptions[i];\r\n      total += getProductItemTotal(item.ProductId, item.Quantity);\r\n    }\r\n    return total;\r\n  };\r\n  return (<>\r\n    <div>Order #: {data[0]['OrderId'] ? data[0]['OrderId'] : 'Pending'}</div>\r\n    <Table size=\"sm\" striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Product</th>\r\n          <th>Quantity</th>\r\n          <th>Amount</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((item, index) => {\r\n          return (<tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>{getProductName(item.ProductId)}</td>\r\n            <td>{item.Quantity}</td>\r\n            <td>{item.Total ? item.Total : getProductItemTotal(item.ProductId, item.Quantity)}</td>\r\n          </tr>);\r\n        })}\r\n        <tr>\r\n          <td colSpan=\"2\"> </td>\r\n          <td>Total</td>\r\n          <td>{props.total ? props.total : getProductTotal(data)}</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  </>);\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport './Order.css';\r\nimport DatePicker from 'react-date-picker';\r\nimport { OrderDetail } from './OrderDetail';\r\n\r\nfunction Order(props) {\r\n    const weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n    let [config, setConfig] = useState({\r\n        date: props.startDate,\r\n        subscriptionData: null,\r\n        content: (<Spinner animation=\"border\" />)\r\n    });\r\n    props.refresh(() => {\r\n        setConfig({...config, subscriptionData: null, content: (<Spinner animation=\"border\" />)});\r\n    })\r\n    const handleChange = (e) => {\r\n        if (e) {\r\n            setConfig({...config, date: e});\r\n        }\r\n    }\r\n    const setOrderFromSubs = () => {\r\n        if (!config.subscriptionData) {\r\n            props.getSubscriptions().then ((data) => {\r\n                config.subscriptionData = data;\r\n                setOrder(data);\r\n            });\r\n        } else {\r\n            setOrder(config.subscriptionData);\r\n        }\r\n    }\r\n    const setContent = () => {\r\n      if (config.date <= (new Date())) {\r\n        props.getOrders(config.date).then((data) => {\r\n          let content;\r\n          if (data.length) {\r\n              let total = data.map((item) => {\r\n                return parseInt(item.Total, 10);\r\n              }).reduce((total, num) => {\r\n                return total + num;\r\n              });\r\n              content = (<div className=\"content\">\r\n                <OrderDetail data={data} total={total} products={props.products} />\r\n              </div>);\r\n          } else {\r\n              content = (<div className=\"content\">\r\n                <span className=\"message\">No orders found.</span>\r\n              </div>);\r\n          }\r\n          setConfig({...config, content: content});\r\n        });\r\n      } else {\r\n          setOrderFromSubs();\r\n      }\r\n    }\r\n    useEffect(() => {\r\n        setContent();\r\n    }, [config.date, config.subscriptionData]);\r\n    return (\r\n        <div className=\"order\">\r\n            <div className=\"wrapper\">\r\n                <h6>Orders</h6>\r\n                <span className=\"header-ctrl\">\r\n                    <DatePicker id=\"order-datepicker\" clearIcon={null} value={config.date} onChange={handleChange} />\r\n                </span>\r\n                {config.content}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    function setOrder(data: any) {\r\n        let mdata = data.filter((item) => {\r\n          let out = false;\r\n          let date = config.date;\r\n          if (item.PausedFrom === null || item.PausedTo === null ||\r\n            item.PausedFrom === '0000-00-00 00:00:00' || item.PausedTo === '0000-00-00 00:00:00' ||\r\n            date < new Date(item.PausedFrom) ||\r\n            date > new Date(item.PausedTo)) {\r\n            switch (item.Type) {\r\n                case 'W':\r\n                  let weekDay = weekDays[date.getDay()];\r\n                  if (item.Details.indexOf(weekDay) > -1) {\r\n                    out = true;\r\n                  }\r\n                  break;\r\n                case 'M':\r\n                  let today = date.getDate();\r\n                  date.setDate(date.getDate() + 1);\r\n                  let tomorrow = date.getDate();\r\n                  if ((item.Details.indexOf('FD') > -1 && today === 1) ||\r\n                    (item.Details.indexOf('LD') > -1 && tomorrow === 1)) {\r\n                    out = true;\r\n                  }\r\n                  date.setDate(date.getDate() - 1);\r\n                  break;\r\n                case 'D':\r\n                default:\r\n                    out = true;\r\n                    break;\r\n              }\r\n          }\r\n          return out;\r\n        });\r\n        let content;\r\n        if (mdata.length) {\r\n            content = (<div className=\"content\">\r\n              <OrderDetail data={mdata} total={undefined} products={props.products} />\r\n            </div>);\r\n        }\r\n        else {\r\n            content = (<div className=\"content\">\r\n              <span className=\"message\">No orders found.</span>\r\n            </div>);\r\n        }\r\n        \r\n        setConfig({ ...config, content: content });\r\n    }\r\n}\r\nexport default Order;\r\n","import React, {useState} from 'react';\r\nimport { Form} from 'react-bootstrap';\r\nimport './Login.css';\r\n\r\nfunction Login(props) {\r\n    const [formData, setFormData] = useState({\r\n        Name: '',\r\n        Phone: '',\r\n        FlatNo: '',\r\n        Address: '',\r\n    });\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        props.register(formData);\r\n    }\r\n    const nameChange = (e) => {\r\n        setFormData({...formData, Name: e.target.value});\r\n    }\r\n    const phoneChange = (e) => {\r\n        setFormData({...formData, Phone: e.target.value});\r\n    }\r\n    const flatNoChange = (e) => {\r\n        setFormData({...formData, FlatNo: e.target.value});\r\n    }\r\n    const addressChange = (e) => {\r\n        setFormData({...formData, Address: e.target.value});\r\n    }\r\n    return (\r\n    <div className=\"login\">\r\n        <h3>Register</h3>\r\n        <Form>\r\n            <Form.Group controlId=\"Name\">\r\n                <Form.Label>Name:</Form.Label>\r\n                <Form.Control type=\"text\" name=\"Name\" onChange={nameChange} defaultValue={formData.Name}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"Phone\">\r\n                <Form.Label>Phone:</Form.Label>\r\n                <Form.Control type=\"text\" name=\"Phone\" onChange={phoneChange} defaultValue={formData.Phone}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"FlatNo\">\r\n                <Form.Label>Door/Flat No.:</Form.Label>\r\n                <Form.Control type=\"text\" name=\"FlatNo\" onChange={flatNoChange} defaultValue={formData.FlatNo}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"Address\">\r\n                <Form.Label>Flat/House Address:</Form.Label>\r\n                <Form.Control type=\"text\" name=\"Address\" onChange={addressChange} defaultValue={formData.Address}/>\r\n            </Form.Group>\r\n            <Form.Control type=\"submit\" onClick={register}/>\r\n        </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport './App.css';\nimport Subscription from \"./Subscriptions/Subscription\";\nimport Order from \"./Orders/Order\";\nimport Login from \"./Login/Login\";\nfunction App(props) {\n  let orderCallback;\n  const [config, setConfig] = useState({\n      topContent: (<Spinner animation=\"border\" />),\n      subscriptionContent: '',\n      orderContent: '',\n      orderStartDate: new Date(),\n      userData: {Id: undefined},\n      subscriptionData: null,\n      productsData: null\n  });\n  const refreshOrder = (callback) => {\n      orderCallback = callback;\n  }\n  const getOrders = (date) => {\n      let formattedDate = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n      return props.getOrders(config.userData['Id'], formattedDate);\n  }\n  const deleteSubscription = (id) => {\n      let prom = props.deleteSubscription(id);\n      prom.then(() => {\n          if (orderCallback) {\n              orderCallback();\n          }\n      })\n      return prom;\n  }\n  function showWelcomePage() {\n      let products = config.productsData;\n      setConfig({\n          ...config, \n          topContent: '',\n          subscriptionContent: (<Subscription products={products} saveSubscription={saveSubscription} \n              deleteSubscription={deleteSubscription} getSubscriptions={getSubscriptions} />),\n          orderContent: (<Order refresh={refreshOrder} startDate={config.orderStartDate} getOrders={getOrders} products={products} getSubscriptions={getSubscriptions} />)\n      });\n  }\n  const getSubscriptions = useCallback(() => {\n      if (config.userData) {\n          let prom = props.getSubscriptions(config.userData['Id']);\n          prom.then((sdata) => {\n              config.subscriptionData = sdata;\n          });\n          return prom;\n      }\n  }, [config.userData['Id']]);\n  const saveSubscription = useCallback((data) => {\n      data['UserId'] = config.userData['Id'];\n      let prom = props.saveSubscription(data);\n      if (data['Id']) {\n          config.subscriptionData = null;\n          prom.then(() => {\n              if (orderCallback) {\n                  orderCallback();\n              }\n              showWelcomePage();\n          });\n      } else {\n          prom.then(() => {\n              if (orderCallback) {\n                  orderCallback();\n              }\n          });\n      }\n      return prom;\n  }, []);\n  const register = (data) => {\n      props.register(data).then((udata) => {\n          config.userData = udata[0];\n          config.productsData = udata[1];\n          showWelcomePage();\n      });\n  }\n  \n  useEffect(() => {\n    props.getUserProductDetails().then((data) => {\n        if (!data || !data[0]) {\n            setConfig({...config, topContent: <Login register={register}/>});\n        } else {\n            config.userData = data[0];\n            config.productsData = data[1];\n            showWelcomePage();\n        }\n      });\n  }, []);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <label>Amruth Milk</label>\n        {config.userData && <span className=\"amt\">Cash: {config.userData.Amount}.0</span>}\n      </header>\n      <div className=\"body\">\n        {config.topContent}\n        {config.subscriptionContent}\n        {config.orderContent}\n      </div>\n      <footer>\n        <label>Contact: 71213XXXXXX</label>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\r\nimport querystring from 'query-string';\r\nconst FetchSub = {\r\n    // queryBaseURL: \"/api/?db=epiz-24335607-milk&\",\r\n    // queryBaseURL: \"http://amruthamilk.epizy.com/api/?db=epiz-24335607-milk&\",\r\n    queryBaseURL: \"https://khadir.dx.am/api/?db=2461352-milk&\",\r\n    getUserDetails (data = null) {\r\n        var promise = new Promise((resolve, reject) => {\r\n            if (!data) {\r\n                data = window.localStorage.getItem(\"Milk.Subscriptions\");\r\n            }\r\n            if (data && data !== \"undefined\") {\r\n                let jData = JSON.parse(data);\r\n                if (jData) {\r\n                    if (!jData.Id) {\r\n                        let url = `${FetchSub.queryBaseURL}table=User&column=Phone&value=${jData.Phone}`;\r\n                        AxiosWrapper.get(url).then((resp) => {\r\n                            let udata = resp.data;\r\n                            if (udata && udata[0].Id) {\r\n                                window.localStorage.setItem(\"Milk.Subscriptions\", JSON.stringify(udata[0]));\r\n                                resolve(jData);\r\n                            } else {\r\n                                resolve('');\r\n                            }\r\n                        });\r\n                    } else {\r\n                        resolve(jData);\r\n                    }\r\n                } else {\r\n                    resolve(jData);\r\n                }\r\n            } else {\r\n                resolve('');\r\n            }\r\n        });\r\n        return promise;\r\n    },\r\n    getProductDetails () {\r\n        var promise = new Promise((resolve, reject) => {\r\n            let url = `${FetchSub.queryBaseURL}table=Product`;\r\n            AxiosWrapper.get(url).then((resp) => {\r\n                resolve(resp.data);\r\n            }).catch(() => {\r\n                resolve('');\r\n            });\r\n        });\r\n        return promise;\r\n    },\r\n    getUserProductDetails () {\r\n        var promise = new Promise((resolve, reject) => {\r\n            Promise.all([FetchSub.getUserDetails(), FetchSub.getProductDetails()]).then((data) => {\r\n                resolve(data);\r\n            });\r\n        });\r\n        return promise;\r\n    },\r\n    deleteSubscription(id) {\r\n        var promise = new Promise((resolve, reject) => {\r\n            let url = `${FetchSub.queryBaseURL}table=Subscription&column=Id&value=${id}`;\r\n            AxiosWrapper.delete(url).then((resp) => {\r\n                if (!resp['error']) {\r\n                    resolve(resp['data']);\r\n                } else {\r\n                    resolve('');\r\n                }\r\n            }).catch(() => {\r\n                resolve('');\r\n            });\r\n        });\r\n        return promise;\r\n    },\r\n    getOrders (id, date) {\r\n        var promise = new Promise((resolve, reject) => {\r\n            let url = `${FetchSub.queryBaseURL}table=UserOrder&column=UserId&value=${id}&column1=Date&value1=${date}`;\r\n            AxiosWrapper.get(url).then ((res) => {\r\n                if (!res['error']) {\r\n                    let data = res['data'];\r\n                    resolve(data);\r\n                }\r\n            });\r\n        });\r\n        return promise;\r\n    },\r\n    register (data) {\r\n        var promise = new Promise((resolve, reject) => {\r\n            let url = `${FetchSub.queryBaseURL}table=User`;\r\n            AxiosWrapper.post(url, data).then ((res) => {\r\n                if (!res['error'] && res['data'] === '') {\r\n                    window.localStorage.setItem(\"Milk.Subscriptions\", JSON.stringify(data));\r\n                    FetchSub.getUserProductDetails().then(resp => {\r\n                        resolve(resp);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        return promise;\r\n    },\r\n    getSubscriptions (id) {\r\n        var promise = new Promise((resolve, reject) => {\r\n            let url = `${FetchSub.queryBaseURL}table=Subscription&column=UserId&value=${id}`;\r\n            AxiosWrapper.get(url).then ((res) => {\r\n                if (!res['error']) {\r\n                    let data = res['data'];\r\n                    data = data.map((item) => {\r\n                        item['Details'] = item['Details'].split(',');\r\n                        return item;\r\n                    });\r\n                    resolve(data);\r\n                }\r\n            });\r\n        });\r\n        return promise;\r\n    },\r\n    saveSubscription(data) {\r\n        var promise = new Promise((resolve, reject) => {\r\n            if (data['Details']) {\r\n                data['Details'] = data['Details'].toString();\r\n            }\r\n            let url = `${FetchSub.queryBaseURL}table=Subscription`;\r\n            if (!data['Id']) {\r\n                AxiosWrapper.post(url, data).then ((res) => {\r\n                    if (!res['error']) {\r\n                        resolve(res['data']);\r\n                    }\r\n                });\r\n            } else {\r\n                url += `&column=Id&value=${data['Id']}`;\r\n                AxiosWrapper.put(url, data).then ((res) => {\r\n                    if (!res['error']) {\r\n                        resolve(res['data']);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return promise;\r\n    },\r\n    throwError (msg, resolve) {\r\n        AxiosWrapper.errorCallback(msg);\r\n        resolve({error: msg});\r\n    },\r\n    handleError (callback) {\r\n        AxiosWrapper.errorCallback = callback;\r\n    }\r\n}\r\nexport default FetchSub;\r\nlet AxiosWrapper = {\r\n    errorCallback: null,\r\n    init(callback) {\r\n        AxiosWrapper.errorCallback = callback;\r\n    },\r\n    addSessionHeader: (config = {}) => {\r\n        let headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\r\n        config = {\r\n            headers: headers\r\n        }\r\n        return config;\r\n    },\r\n    get: (url, config = undefined) => {\r\n        let newConfig = AxiosWrapper.addSessionHeader(config);\r\n        let promise = new Promise((resolve, reject) => {\r\n            axios.get.call(this, url, newConfig).then((data)=> {\r\n                resolve(data);\r\n            }).catch((error) => {\r\n                AxiosWrapper.handleError(error, resolve);\r\n            });\r\n        });\r\n        return promise;\r\n    },\r\n    delete: (url, config = undefined) => {\r\n        let newConfig = AxiosWrapper.addSessionHeader(config);\r\n        let promise = new Promise((resolve, reject) => {\r\n            axios.delete.call(this, url, newConfig).then((data)=> {\r\n                resolve(data);\r\n            }).catch((error) => {\r\n                AxiosWrapper.handleError(error, resolve);\r\n            });\r\n        });\r\n        return promise;\r\n    },\r\n    post:  (url, data, config = undefined) => {\r\n        let newConfig = AxiosWrapper.addSessionHeader(config);\r\n        let promise = new Promise((resolve, reject) => {\r\n            axios.post.call(this, url, querystring.stringify(data), newConfig).then((data)=> {\r\n                resolve(data);\r\n            }).catch((error) => {\r\n                AxiosWrapper.handleError(error, resolve);\r\n            });\r\n        });\r\n        return promise;\r\n    },\r\n    put:  (url, data = undefined, config = undefined) => {\r\n        let newConfig = AxiosWrapper.addSessionHeader(config);\r\n        let promise = new Promise((resolve, reject) => {\r\n            axios.put.call(this, url, querystring.stringify(data), newConfig).then((data)=> {\r\n                resolve(data);\r\n            }).catch((error) => {\r\n                AxiosWrapper.handleError(error, resolve);\r\n            });\r\n        });\r\n    return promise;\r\n    },\r\n\r\n    handleError: function (error, resolve) {\r\n        // console.log(error);\r\n        let msg = \"\";\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            console.log(error.response['data']);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n            msg = error.response.status;\r\n            if (error.response['data']) {\r\n                let data = error.response['data'];\r\n                if (data.errorMessage) {\r\n                    msg = error.response['data'].errorMessage;\r\n                } else if (data.localizedErrorSummary) {\r\n                    msg = error.response['data'].localizedErrorSummary;\r\n                } else if (data.errorSummary) {\r\n                    msg = error.response['data'].errorSummary;\r\n                }\r\n                console.log(data);\r\n            }\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n            console.log(error.request);\r\n            msg = \"No Response\";\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message);\r\n            msg = \"No Response\";\r\n            if (!error) {\r\n                error = {errorMessage: msg};\r\n            } else if (error.message) {\r\n                msg = error.message;\r\n            }\r\n        }\r\n        //console.log(error.config);\r\n        if (AxiosWrapper.errorCallback) {\r\n            AxiosWrapper.errorCallback(msg)\r\n        }\r\n        resolve({data: {}, error: error});\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport FetchSub from \"./FetchSubscription.js\";\n\nReactDOM.render(<App getUserProductDetails={FetchSub.getUserProductDetails} \n    saveSubscription={FetchSub.saveSubscription} getOrders={FetchSub.getOrders}\n    deleteSubscription={FetchSub.deleteSubscription} getSubscriptions={FetchSub.getSubscriptions} \n    register={FetchSub.register} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}